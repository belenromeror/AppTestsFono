# Generated by Django 4.0.5 on 2023-08-19 02:19

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('alumnos', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ResultadoOFA',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mejillas', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('simetricas', 'Simetricas'), ('caidas', 'Caidas'), ('heridas_internas', 'Heridas internas')], max_length=255), size=None)),
                ('nariz', models.CharField(choices=[('normal', 'Normal'), ('desviada', 'Desviada')], max_length=255)),
                ('maxilar_inferior', models.CharField(choices=[('normal', 'Normal'), ('micrognatia', 'Micrognatia'), ('prognatismo', 'Prognatismo')], max_length=255)),
                ('fisura_labios', models.CharField(choices=[('si', 'Si'), ('no', 'No')], max_length=255)),
                ('tamano_labios', models.CharField(choices=[('normal', 'Normal'), ('evertido', 'Evertido'), ('corto', 'Corto')], max_length=255)),
                ('funcionalidad_labios', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('protusion', 'Protusion'), ('retrusion', 'Retrusion'), ('movimiento_lateral', 'Movimiento lateral'), ('vibracion', 'Vibracion')], max_length=255), size=None)),
                ('funcionalidad_general_labios', models.CharField(choices=[('adecuada', 'Adecuada'), ('sin_movilidad', 'Sin movilidad'), ('disminuida', 'Disminuida')], max_length=255)),
                ('frenillo_labios', models.CharField(choices=[('normal', 'Normal'), ('corto', 'Corto')], max_length=255)),
                ('color_labios', models.CharField(choices=[('normal', 'Normal'), ('secos', 'Secos'), ('rojos', 'Rojos')], max_length=255)),
                ('cierre_labial_reposo', models.CharField(choices=[('presente', 'Presente'), ('ausente', 'Ausente')], max_length=255)),
                ('cierre_labial_esfuerzo', models.CharField(choices=[('presente', 'Presente'), ('ausente', 'Ausente')], max_length=255)),
                ('tamano_lengua', models.CharField(choices=[('normal', 'Normal'), ('macroglosia', 'Macroglosia'), ('microglosia', 'Microglosia')], max_length=255)),
                ('frenillo_lengua', models.CharField(choices=[('normal', 'Normal'), ('corto', 'Corto'), ('c_funcional', 'C. funcional'), ('grueso', 'Grueso'), ('anquilosante', 'Anquilosante')], max_length=255)),
                ('funcionalidad_lengua', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('protusion', 'Protusion'), ('retrusion', 'Retrusion'), ('movimiento_lateral', 'Movimiento lateral'), ('elevacion', 'Elevacion'), ('adosamiento', 'Adosamiento'), ('chasquido', 'Chasquido')], max_length=255), size=None)),
                ('funcionalidad_general_lengua', models.CharField(choices=[('adecuada', 'Adecuada'), ('sin_movilidad', 'Sin movilidad'), ('disminuida', 'Disminuida')], max_length=255)),
                ('forma_paladar_duro', models.CharField(choices=[('normal', 'Normal'), ('ojival', 'Ojival'), ('otra', 'Otra')], max_length=255)),
                ('fisura_paladar_duro', models.CharField(choices=[('si', 'Si'), ('no', 'No'), ('operada', 'Operada')], max_length=255)),
                ('fistula_paladar_duro', models.CharField(choices=[('si', 'Si'), ('no', 'No')], max_length=255)),
                ('fisura_paladar_blando', models.CharField(choices=[('si', 'Si'), ('no', 'No'), ('operada', 'Operada')], max_length=255)),
                ('movilidad_paladar_blando', models.CharField(choices=[('adecuada', 'Adecuada'), ('sin_movilidad', 'Sin movilidad'), ('disminuida', 'Disminuida')], max_length=255)),
                ('uvula', models.CharField(choices=[('presente', 'Presente'), ('ausente', 'Ausente')], max_length=255)),
                ('tipo_uvula', models.CharField(choices=[('normal', 'Normal'), ('corta', 'Corta'), ('larga', 'Larga'), ('bifida', 'Bifida')], max_length=255)),
                ('amigdalas_palatinas', models.CharField(choices=[('presente', 'Presente'), ('ausente', 'Ausente')], max_length=255)),
                ('tamano_amigdalas_palatinas', models.CharField(choices=[('normal', 'Normal'), ('aumentadas', 'Aumentadas'), ('disminuidas', 'Disminuidas'), ('asimetricas', 'Asimetricas')], max_length=255)),
                ('etapa_denticion', models.CharField(choices=[('temporal', 'Temporal'), ('primera_fase', 'Primera fase'), ('segunda_fase', 'Segunda fase'), ('permanente', 'Permanente')], max_length=255)),
                ('arcada_superior', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('mal_posiciones', 'Mal posiciones'), ('giroversiones', 'Giroversiones'), ('caries', 'Caries')], max_length=255), size=None)),
                ('forma_arcada_superior', models.CharField(choices=[('semicircular', 'Semicircular'), ('eliptica', 'Eliptica')], max_length=255)),
                ('arcada_inferior', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('mal_posiciones', 'Mal posiciones'), ('giroversiones', 'Giroversiones'), ('caries', 'Caries')], max_length=255), size=None)),
                ('mordida_oclusion', models.CharField(choices=[('normal', 'Normal'), ('vis a vis', 'Vis a vis'), ('abierta', 'Abierta'), ('sobremordida', 'Sobremordida'), ('cruzada', 'Cruzada'), ('invertida', 'Invertida')], max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='ResultadoEvaluacion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha_nacimiento', models.DateTimeField()),
                ('resultado_teprosif', models.IntegerField()),
                ('resultado_stsg', models.IntegerField()),
                ('resultado_tecal', models.IntegerField()),
                ('alumno', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='alumnos.alumno')),
                ('resultado_ofa', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='evaluaciones.resultadoofa')),
            ],
        ),
    ]
